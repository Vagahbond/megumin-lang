Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    THIS
    VAL

Grammar

Rule 0     S' -> start
Rule 1     start -> block
Rule 2     block -> instruction block
Rule 3     block -> condition block
Rule 4     block -> loop block
Rule 5     block -> funcdef block
Rule 6     block -> classdef block
Rule 7     block -> instruction
Rule 8     block -> condition
Rule 9     block -> loop
Rule 10    block -> funcdef
Rule 11    block -> classdef
Rule 12    funcdef -> LET NAME LPAREN declarg RPAREN block END
Rule 13    funcdef -> LET NAME LPAREN RPAREN block END
Rule 14    classdef -> CLASS NAME attributes END
Rule 15    attributes -> NAME SEMICOLON
Rule 16    attributes -> funcdef
Rule 17    attributes -> NAME SEMICOLON attributes
Rule 18    attributes -> funcdef attributes
Rule 19    statement -> RETURN expression
Rule 20    statement -> NAME LPAREN callarg RPAREN
Rule 21    statement -> NAME LPAREN RPAREN
Rule 22    expression -> NAME LPAREN callarg RPAREN
Rule 23    expression -> NAME LPAREN RPAREN
Rule 24    declarg -> NAME COMMA declarg
Rule 25    declarg -> NAME
Rule 26    callarg -> expression COMMA callarg
Rule 27    callarg -> expression
Rule 28    instruction -> statement SEMICOLON
Rule 29    instruction -> expression SEMICOLON
Rule 30    statement -> NAME AFFECT expression
Rule 31    statement -> NAME AFFECT address
Rule 32    statement -> VAR NAME
Rule 33    statement -> VAR NAME AFFECT expression
Rule 34    statement -> VAR NAME AFFECT address
Rule 35    condition -> IF LPAREN boolexpr RPAREN block END
Rule 36    condition -> IF LPAREN boolexpr RPAREN block ELSE block END
Rule 37    loop -> WHILE LPAREN boolexpr RPAREN block END
Rule 38    loop -> UNTIL LPAREN boolexpr RPAREN block END
Rule 39    loop -> FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END
Rule 40    boolexpr -> boolexpr COR boolexpr
Rule 41    boolexpr -> expression CAND expression
Rule 42    boolexpr -> expression GT expression
Rule 43    boolexpr -> expression LT expression
Rule 44    boolexpr -> expression LOE expression
Rule 45    boolexpr -> expression GOE expression
Rule 46    boolexpr -> expression EQUALS expression
Rule 47    boolexpr -> expression DIFFERENT expression
Rule 48    expression -> PRINT LPAREN expression RPAREN
Rule 49    expression -> expression PLUS expression
Rule 50    expression -> NAME SHORTINCR
Rule 51    expression -> NAME SHORTADD expression
Rule 52    expression -> expression TIMES expression
Rule 53    expression -> expression MINUS expression
Rule 54    expression -> expression DIVIDE expression
Rule 55    expression -> expression OR expression
Rule 56    expression -> expression AND expression
Rule 57    expression -> LPAREN expression RPAREN
Rule 58    expression -> NUMBER
Rule 59    expression -> NAME
Rule 60    address -> REF NAME

Terminals, with rules where they appear

AFFECT               : 30 31 33 34
AND                  : 56
CAND                 : 41
CLASS                : 14
COMMA                : 24 26
COR                  : 40
DIFFERENT            : 47
DIVIDE               : 54
ELSE                 : 36
END                  : 12 13 14 35 36 37 38 39
EQUALS               : 46
FOR                  : 39
GOE                  : 45
GT                   : 42
IF                   : 35 36
LET                  : 12 13
LOE                  : 44
LPAREN               : 12 13 20 21 22 23 35 36 37 38 39 48 57
LT                   : 43
MINUS                : 53
NAME                 : 12 13 14 15 17 20 21 22 23 24 25 30 31 32 33 34 39 50 51 59 60
NUMBER               : 58
OR                   : 55
PLUS                 : 49
PRINT                : 48
REF                  : 60
RETURN               : 19
RPAREN               : 12 13 20 21 22 23 35 36 37 38 39 48 57
SEMICOLON            : 15 17 28 29 39 39
SHORTADD             : 51
SHORTINCR            : 50
THIS                 : 
TIMES                : 52
UNTIL                : 38
VAL                  : 
VAR                  : 32 33 34
WHILE                : 37
error                : 

Nonterminals, with rules where they appear

address              : 31 34
attributes           : 14 17 18
block                : 1 2 3 4 5 6 12 13 35 36 36 37 38 39
boolexpr             : 35 36 37 38 39 40 40
callarg              : 20 22 26
classdef             : 6 11
condition            : 3 8
declarg              : 12 24
expression           : 19 26 27 29 30 33 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 49 49 51 52 52 53 53 54 54 55 55 56 56 57
funcdef              : 5 10 16 18
instruction          : 2 7
loop                 : 4 9
start                : 0
statement            : 28 39

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . block
    (2) block -> . instruction block
    (3) block -> . condition block
    (4) block -> . loop block
    (5) block -> . funcdef block
    (6) block -> . classdef block
    (7) block -> . instruction
    (8) block -> . condition
    (9) block -> . loop
    (10) block -> . funcdef
    (11) block -> . classdef
    (28) instruction -> . statement SEMICOLON
    (29) instruction -> . expression SEMICOLON
    (35) condition -> . IF LPAREN boolexpr RPAREN block END
    (36) condition -> . IF LPAREN boolexpr RPAREN block ELSE block END
    (37) loop -> . WHILE LPAREN boolexpr RPAREN block END
    (38) loop -> . UNTIL LPAREN boolexpr RPAREN block END
    (39) loop -> . FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END
    (12) funcdef -> . LET NAME LPAREN declarg RPAREN block END
    (13) funcdef -> . LET NAME LPAREN RPAREN block END
    (14) classdef -> . CLASS NAME attributes END
    (19) statement -> . RETURN expression
    (20) statement -> . NAME LPAREN callarg RPAREN
    (21) statement -> . NAME LPAREN RPAREN
    (30) statement -> . NAME AFFECT expression
    (31) statement -> . NAME AFFECT address
    (32) statement -> . VAR NAME
    (33) statement -> . VAR NAME AFFECT expression
    (34) statement -> . VAR NAME AFFECT address
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    IF              shift and go to state 10
    WHILE           shift and go to state 12
    UNTIL           shift and go to state 13
    FOR             shift and go to state 14
    LET             shift and go to state 16
    CLASS           shift and go to state 17
    RETURN          shift and go to state 18
    NAME            shift and go to state 15
    VAR             shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    start                          shift and go to state 1
    block                          shift and go to state 2
    instruction                    shift and go to state 3
    condition                      shift and go to state 4
    loop                           shift and go to state 5
    funcdef                        shift and go to state 6
    classdef                       shift and go to state 7
    statement                      shift and go to state 8
    expression                     shift and go to state 9

state 1

    (0) S' -> start .



state 2

    (1) start -> block .

    $end            reduce using rule 1 (start -> block .)


state 3

    (2) block -> instruction . block
    (7) block -> instruction .
    (2) block -> . instruction block
    (3) block -> . condition block
    (4) block -> . loop block
    (5) block -> . funcdef block
    (6) block -> . classdef block
    (7) block -> . instruction
    (8) block -> . condition
    (9) block -> . loop
    (10) block -> . funcdef
    (11) block -> . classdef
    (28) instruction -> . statement SEMICOLON
    (29) instruction -> . expression SEMICOLON
    (35) condition -> . IF LPAREN boolexpr RPAREN block END
    (36) condition -> . IF LPAREN boolexpr RPAREN block ELSE block END
    (37) loop -> . WHILE LPAREN boolexpr RPAREN block END
    (38) loop -> . UNTIL LPAREN boolexpr RPAREN block END
    (39) loop -> . FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END
    (12) funcdef -> . LET NAME LPAREN declarg RPAREN block END
    (13) funcdef -> . LET NAME LPAREN RPAREN block END
    (14) classdef -> . CLASS NAME attributes END
    (19) statement -> . RETURN expression
    (20) statement -> . NAME LPAREN callarg RPAREN
    (21) statement -> . NAME LPAREN RPAREN
    (30) statement -> . NAME AFFECT expression
    (31) statement -> . NAME AFFECT address
    (32) statement -> . VAR NAME
    (33) statement -> . VAR NAME AFFECT expression
    (34) statement -> . VAR NAME AFFECT address
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    $end            reduce using rule 7 (block -> instruction .)
    END             reduce using rule 7 (block -> instruction .)
    ELSE            reduce using rule 7 (block -> instruction .)
    IF              shift and go to state 10
    WHILE           shift and go to state 12
    UNTIL           shift and go to state 13
    FOR             shift and go to state 14
    LET             shift and go to state 16
    CLASS           shift and go to state 17
    RETURN          shift and go to state 18
    NAME            shift and go to state 15
    VAR             shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    instruction                    shift and go to state 3
    block                          shift and go to state 22
    condition                      shift and go to state 4
    loop                           shift and go to state 5
    funcdef                        shift and go to state 6
    classdef                       shift and go to state 7
    statement                      shift and go to state 8
    expression                     shift and go to state 9

state 4

    (3) block -> condition . block
    (8) block -> condition .
    (2) block -> . instruction block
    (3) block -> . condition block
    (4) block -> . loop block
    (5) block -> . funcdef block
    (6) block -> . classdef block
    (7) block -> . instruction
    (8) block -> . condition
    (9) block -> . loop
    (10) block -> . funcdef
    (11) block -> . classdef
    (28) instruction -> . statement SEMICOLON
    (29) instruction -> . expression SEMICOLON
    (35) condition -> . IF LPAREN boolexpr RPAREN block END
    (36) condition -> . IF LPAREN boolexpr RPAREN block ELSE block END
    (37) loop -> . WHILE LPAREN boolexpr RPAREN block END
    (38) loop -> . UNTIL LPAREN boolexpr RPAREN block END
    (39) loop -> . FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END
    (12) funcdef -> . LET NAME LPAREN declarg RPAREN block END
    (13) funcdef -> . LET NAME LPAREN RPAREN block END
    (14) classdef -> . CLASS NAME attributes END
    (19) statement -> . RETURN expression
    (20) statement -> . NAME LPAREN callarg RPAREN
    (21) statement -> . NAME LPAREN RPAREN
    (30) statement -> . NAME AFFECT expression
    (31) statement -> . NAME AFFECT address
    (32) statement -> . VAR NAME
    (33) statement -> . VAR NAME AFFECT expression
    (34) statement -> . VAR NAME AFFECT address
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    $end            reduce using rule 8 (block -> condition .)
    END             reduce using rule 8 (block -> condition .)
    ELSE            reduce using rule 8 (block -> condition .)
    IF              shift and go to state 10
    WHILE           shift and go to state 12
    UNTIL           shift and go to state 13
    FOR             shift and go to state 14
    LET             shift and go to state 16
    CLASS           shift and go to state 17
    RETURN          shift and go to state 18
    NAME            shift and go to state 15
    VAR             shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    condition                      shift and go to state 4
    block                          shift and go to state 23
    instruction                    shift and go to state 3
    loop                           shift and go to state 5
    funcdef                        shift and go to state 6
    classdef                       shift and go to state 7
    statement                      shift and go to state 8
    expression                     shift and go to state 9

state 5

    (4) block -> loop . block
    (9) block -> loop .
    (2) block -> . instruction block
    (3) block -> . condition block
    (4) block -> . loop block
    (5) block -> . funcdef block
    (6) block -> . classdef block
    (7) block -> . instruction
    (8) block -> . condition
    (9) block -> . loop
    (10) block -> . funcdef
    (11) block -> . classdef
    (28) instruction -> . statement SEMICOLON
    (29) instruction -> . expression SEMICOLON
    (35) condition -> . IF LPAREN boolexpr RPAREN block END
    (36) condition -> . IF LPAREN boolexpr RPAREN block ELSE block END
    (37) loop -> . WHILE LPAREN boolexpr RPAREN block END
    (38) loop -> . UNTIL LPAREN boolexpr RPAREN block END
    (39) loop -> . FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END
    (12) funcdef -> . LET NAME LPAREN declarg RPAREN block END
    (13) funcdef -> . LET NAME LPAREN RPAREN block END
    (14) classdef -> . CLASS NAME attributes END
    (19) statement -> . RETURN expression
    (20) statement -> . NAME LPAREN callarg RPAREN
    (21) statement -> . NAME LPAREN RPAREN
    (30) statement -> . NAME AFFECT expression
    (31) statement -> . NAME AFFECT address
    (32) statement -> . VAR NAME
    (33) statement -> . VAR NAME AFFECT expression
    (34) statement -> . VAR NAME AFFECT address
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    $end            reduce using rule 9 (block -> loop .)
    END             reduce using rule 9 (block -> loop .)
    ELSE            reduce using rule 9 (block -> loop .)
    IF              shift and go to state 10
    WHILE           shift and go to state 12
    UNTIL           shift and go to state 13
    FOR             shift and go to state 14
    LET             shift and go to state 16
    CLASS           shift and go to state 17
    RETURN          shift and go to state 18
    NAME            shift and go to state 15
    VAR             shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    loop                           shift and go to state 5
    block                          shift and go to state 24
    instruction                    shift and go to state 3
    condition                      shift and go to state 4
    funcdef                        shift and go to state 6
    classdef                       shift and go to state 7
    statement                      shift and go to state 8
    expression                     shift and go to state 9

state 6

    (5) block -> funcdef . block
    (10) block -> funcdef .
    (2) block -> . instruction block
    (3) block -> . condition block
    (4) block -> . loop block
    (5) block -> . funcdef block
    (6) block -> . classdef block
    (7) block -> . instruction
    (8) block -> . condition
    (9) block -> . loop
    (10) block -> . funcdef
    (11) block -> . classdef
    (28) instruction -> . statement SEMICOLON
    (29) instruction -> . expression SEMICOLON
    (35) condition -> . IF LPAREN boolexpr RPAREN block END
    (36) condition -> . IF LPAREN boolexpr RPAREN block ELSE block END
    (37) loop -> . WHILE LPAREN boolexpr RPAREN block END
    (38) loop -> . UNTIL LPAREN boolexpr RPAREN block END
    (39) loop -> . FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END
    (12) funcdef -> . LET NAME LPAREN declarg RPAREN block END
    (13) funcdef -> . LET NAME LPAREN RPAREN block END
    (14) classdef -> . CLASS NAME attributes END
    (19) statement -> . RETURN expression
    (20) statement -> . NAME LPAREN callarg RPAREN
    (21) statement -> . NAME LPAREN RPAREN
    (30) statement -> . NAME AFFECT expression
    (31) statement -> . NAME AFFECT address
    (32) statement -> . VAR NAME
    (33) statement -> . VAR NAME AFFECT expression
    (34) statement -> . VAR NAME AFFECT address
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    $end            reduce using rule 10 (block -> funcdef .)
    END             reduce using rule 10 (block -> funcdef .)
    ELSE            reduce using rule 10 (block -> funcdef .)
    IF              shift and go to state 10
    WHILE           shift and go to state 12
    UNTIL           shift and go to state 13
    FOR             shift and go to state 14
    LET             shift and go to state 16
    CLASS           shift and go to state 17
    RETURN          shift and go to state 18
    NAME            shift and go to state 15
    VAR             shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    funcdef                        shift and go to state 6
    block                          shift and go to state 25
    instruction                    shift and go to state 3
    condition                      shift and go to state 4
    loop                           shift and go to state 5
    classdef                       shift and go to state 7
    statement                      shift and go to state 8
    expression                     shift and go to state 9

state 7

    (6) block -> classdef . block
    (11) block -> classdef .
    (2) block -> . instruction block
    (3) block -> . condition block
    (4) block -> . loop block
    (5) block -> . funcdef block
    (6) block -> . classdef block
    (7) block -> . instruction
    (8) block -> . condition
    (9) block -> . loop
    (10) block -> . funcdef
    (11) block -> . classdef
    (28) instruction -> . statement SEMICOLON
    (29) instruction -> . expression SEMICOLON
    (35) condition -> . IF LPAREN boolexpr RPAREN block END
    (36) condition -> . IF LPAREN boolexpr RPAREN block ELSE block END
    (37) loop -> . WHILE LPAREN boolexpr RPAREN block END
    (38) loop -> . UNTIL LPAREN boolexpr RPAREN block END
    (39) loop -> . FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END
    (12) funcdef -> . LET NAME LPAREN declarg RPAREN block END
    (13) funcdef -> . LET NAME LPAREN RPAREN block END
    (14) classdef -> . CLASS NAME attributes END
    (19) statement -> . RETURN expression
    (20) statement -> . NAME LPAREN callarg RPAREN
    (21) statement -> . NAME LPAREN RPAREN
    (30) statement -> . NAME AFFECT expression
    (31) statement -> . NAME AFFECT address
    (32) statement -> . VAR NAME
    (33) statement -> . VAR NAME AFFECT expression
    (34) statement -> . VAR NAME AFFECT address
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    $end            reduce using rule 11 (block -> classdef .)
    END             reduce using rule 11 (block -> classdef .)
    ELSE            reduce using rule 11 (block -> classdef .)
    IF              shift and go to state 10
    WHILE           shift and go to state 12
    UNTIL           shift and go to state 13
    FOR             shift and go to state 14
    LET             shift and go to state 16
    CLASS           shift and go to state 17
    RETURN          shift and go to state 18
    NAME            shift and go to state 15
    VAR             shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    classdef                       shift and go to state 7
    block                          shift and go to state 26
    instruction                    shift and go to state 3
    condition                      shift and go to state 4
    loop                           shift and go to state 5
    funcdef                        shift and go to state 6
    statement                      shift and go to state 8
    expression                     shift and go to state 9

state 8

    (28) instruction -> statement . SEMICOLON

    SEMICOLON       shift and go to state 27


state 9

    (29) instruction -> expression . SEMICOLON
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

    SEMICOLON       shift and go to state 28
    PLUS            shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    DIVIDE          shift and go to state 32
    OR              shift and go to state 33
    AND             shift and go to state 34


state 10

    (35) condition -> IF . LPAREN boolexpr RPAREN block END
    (36) condition -> IF . LPAREN boolexpr RPAREN block ELSE block END

    LPAREN          shift and go to state 35


state 11

    (57) expression -> LPAREN . expression RPAREN
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    expression                     shift and go to state 36

state 12

    (37) loop -> WHILE . LPAREN boolexpr RPAREN block END

    LPAREN          shift and go to state 38


state 13

    (38) loop -> UNTIL . LPAREN boolexpr RPAREN block END

    LPAREN          shift and go to state 39


state 14

    (39) loop -> FOR . LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END

    LPAREN          shift and go to state 40


state 15

    (20) statement -> NAME . LPAREN callarg RPAREN
    (21) statement -> NAME . LPAREN RPAREN
    (30) statement -> NAME . AFFECT expression
    (31) statement -> NAME . AFFECT address
    (22) expression -> NAME . LPAREN callarg RPAREN
    (23) expression -> NAME . LPAREN RPAREN
    (50) expression -> NAME . SHORTINCR
    (51) expression -> NAME . SHORTADD expression
    (59) expression -> NAME .

    LPAREN          shift and go to state 41
    AFFECT          shift and go to state 42
    SHORTINCR       shift and go to state 43
    SHORTADD        shift and go to state 44
    SEMICOLON       reduce using rule 59 (expression -> NAME .)
    PLUS            reduce using rule 59 (expression -> NAME .)
    TIMES           reduce using rule 59 (expression -> NAME .)
    MINUS           reduce using rule 59 (expression -> NAME .)
    DIVIDE          reduce using rule 59 (expression -> NAME .)
    OR              reduce using rule 59 (expression -> NAME .)
    AND             reduce using rule 59 (expression -> NAME .)


state 16

    (12) funcdef -> LET . NAME LPAREN declarg RPAREN block END
    (13) funcdef -> LET . NAME LPAREN RPAREN block END

    NAME            shift and go to state 45


state 17

    (14) classdef -> CLASS . NAME attributes END

    NAME            shift and go to state 46


state 18

    (19) statement -> RETURN . expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    expression                     shift and go to state 47

state 19

    (32) statement -> VAR . NAME
    (33) statement -> VAR . NAME AFFECT expression
    (34) statement -> VAR . NAME AFFECT address

    NAME            shift and go to state 48


state 20

    (48) expression -> PRINT . LPAREN expression RPAREN

    LPAREN          shift and go to state 49


state 21

    (58) expression -> NUMBER .

    SEMICOLON       reduce using rule 58 (expression -> NUMBER .)
    PLUS            reduce using rule 58 (expression -> NUMBER .)
    TIMES           reduce using rule 58 (expression -> NUMBER .)
    MINUS           reduce using rule 58 (expression -> NUMBER .)
    DIVIDE          reduce using rule 58 (expression -> NUMBER .)
    OR              reduce using rule 58 (expression -> NUMBER .)
    AND             reduce using rule 58 (expression -> NUMBER .)
    RPAREN          reduce using rule 58 (expression -> NUMBER .)
    CAND            reduce using rule 58 (expression -> NUMBER .)
    GT              reduce using rule 58 (expression -> NUMBER .)
    LT              reduce using rule 58 (expression -> NUMBER .)
    LOE             reduce using rule 58 (expression -> NUMBER .)
    GOE             reduce using rule 58 (expression -> NUMBER .)
    EQUALS          reduce using rule 58 (expression -> NUMBER .)
    DIFFERENT       reduce using rule 58 (expression -> NUMBER .)
    COMMA           reduce using rule 58 (expression -> NUMBER .)
    COR             reduce using rule 58 (expression -> NUMBER .)


state 22

    (2) block -> instruction block .

    $end            reduce using rule 2 (block -> instruction block .)
    END             reduce using rule 2 (block -> instruction block .)
    ELSE            reduce using rule 2 (block -> instruction block .)


state 23

    (3) block -> condition block .

    $end            reduce using rule 3 (block -> condition block .)
    END             reduce using rule 3 (block -> condition block .)
    ELSE            reduce using rule 3 (block -> condition block .)


state 24

    (4) block -> loop block .

    $end            reduce using rule 4 (block -> loop block .)
    END             reduce using rule 4 (block -> loop block .)
    ELSE            reduce using rule 4 (block -> loop block .)


state 25

    (5) block -> funcdef block .

    $end            reduce using rule 5 (block -> funcdef block .)
    END             reduce using rule 5 (block -> funcdef block .)
    ELSE            reduce using rule 5 (block -> funcdef block .)


state 26

    (6) block -> classdef block .

    $end            reduce using rule 6 (block -> classdef block .)
    END             reduce using rule 6 (block -> classdef block .)
    ELSE            reduce using rule 6 (block -> classdef block .)


state 27

    (28) instruction -> statement SEMICOLON .

    IF              reduce using rule 28 (instruction -> statement SEMICOLON .)
    WHILE           reduce using rule 28 (instruction -> statement SEMICOLON .)
    UNTIL           reduce using rule 28 (instruction -> statement SEMICOLON .)
    FOR             reduce using rule 28 (instruction -> statement SEMICOLON .)
    LET             reduce using rule 28 (instruction -> statement SEMICOLON .)
    CLASS           reduce using rule 28 (instruction -> statement SEMICOLON .)
    RETURN          reduce using rule 28 (instruction -> statement SEMICOLON .)
    NAME            reduce using rule 28 (instruction -> statement SEMICOLON .)
    VAR             reduce using rule 28 (instruction -> statement SEMICOLON .)
    PRINT           reduce using rule 28 (instruction -> statement SEMICOLON .)
    LPAREN          reduce using rule 28 (instruction -> statement SEMICOLON .)
    NUMBER          reduce using rule 28 (instruction -> statement SEMICOLON .)
    $end            reduce using rule 28 (instruction -> statement SEMICOLON .)
    END             reduce using rule 28 (instruction -> statement SEMICOLON .)
    ELSE            reduce using rule 28 (instruction -> statement SEMICOLON .)


state 28

    (29) instruction -> expression SEMICOLON .

    IF              reduce using rule 29 (instruction -> expression SEMICOLON .)
    WHILE           reduce using rule 29 (instruction -> expression SEMICOLON .)
    UNTIL           reduce using rule 29 (instruction -> expression SEMICOLON .)
    FOR             reduce using rule 29 (instruction -> expression SEMICOLON .)
    LET             reduce using rule 29 (instruction -> expression SEMICOLON .)
    CLASS           reduce using rule 29 (instruction -> expression SEMICOLON .)
    RETURN          reduce using rule 29 (instruction -> expression SEMICOLON .)
    NAME            reduce using rule 29 (instruction -> expression SEMICOLON .)
    VAR             reduce using rule 29 (instruction -> expression SEMICOLON .)
    PRINT           reduce using rule 29 (instruction -> expression SEMICOLON .)
    LPAREN          reduce using rule 29 (instruction -> expression SEMICOLON .)
    NUMBER          reduce using rule 29 (instruction -> expression SEMICOLON .)
    $end            reduce using rule 29 (instruction -> expression SEMICOLON .)
    END             reduce using rule 29 (instruction -> expression SEMICOLON .)
    ELSE            reduce using rule 29 (instruction -> expression SEMICOLON .)


state 29

    (49) expression -> expression PLUS . expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    expression                     shift and go to state 50

state 30

    (52) expression -> expression TIMES . expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    expression                     shift and go to state 51

state 31

    (53) expression -> expression MINUS . expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    expression                     shift and go to state 52

state 32

    (54) expression -> expression DIVIDE . expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    expression                     shift and go to state 53

state 33

    (55) expression -> expression OR . expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    expression                     shift and go to state 54

state 34

    (56) expression -> expression AND . expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    expression                     shift and go to state 55

state 35

    (35) condition -> IF LPAREN . boolexpr RPAREN block END
    (36) condition -> IF LPAREN . boolexpr RPAREN block ELSE block END
    (40) boolexpr -> . boolexpr COR boolexpr
    (41) boolexpr -> . expression CAND expression
    (42) boolexpr -> . expression GT expression
    (43) boolexpr -> . expression LT expression
    (44) boolexpr -> . expression LOE expression
    (45) boolexpr -> . expression GOE expression
    (46) boolexpr -> . expression EQUALS expression
    (47) boolexpr -> . expression DIFFERENT expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    boolexpr                       shift and go to state 56
    expression                     shift and go to state 57

state 36

    (57) expression -> LPAREN expression . RPAREN
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

    RPAREN          shift and go to state 58
    PLUS            shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    DIVIDE          shift and go to state 32
    OR              shift and go to state 33
    AND             shift and go to state 34


state 37

    (22) expression -> NAME . LPAREN callarg RPAREN
    (23) expression -> NAME . LPAREN RPAREN
    (50) expression -> NAME . SHORTINCR
    (51) expression -> NAME . SHORTADD expression
    (59) expression -> NAME .

    LPAREN          shift and go to state 59
    SHORTINCR       shift and go to state 43
    SHORTADD        shift and go to state 44
    RPAREN          reduce using rule 59 (expression -> NAME .)
    PLUS            reduce using rule 59 (expression -> NAME .)
    TIMES           reduce using rule 59 (expression -> NAME .)
    MINUS           reduce using rule 59 (expression -> NAME .)
    DIVIDE          reduce using rule 59 (expression -> NAME .)
    OR              reduce using rule 59 (expression -> NAME .)
    AND             reduce using rule 59 (expression -> NAME .)
    SEMICOLON       reduce using rule 59 (expression -> NAME .)
    CAND            reduce using rule 59 (expression -> NAME .)
    GT              reduce using rule 59 (expression -> NAME .)
    LT              reduce using rule 59 (expression -> NAME .)
    LOE             reduce using rule 59 (expression -> NAME .)
    GOE             reduce using rule 59 (expression -> NAME .)
    EQUALS          reduce using rule 59 (expression -> NAME .)
    DIFFERENT       reduce using rule 59 (expression -> NAME .)
    COMMA           reduce using rule 59 (expression -> NAME .)
    COR             reduce using rule 59 (expression -> NAME .)


state 38

    (37) loop -> WHILE LPAREN . boolexpr RPAREN block END
    (40) boolexpr -> . boolexpr COR boolexpr
    (41) boolexpr -> . expression CAND expression
    (42) boolexpr -> . expression GT expression
    (43) boolexpr -> . expression LT expression
    (44) boolexpr -> . expression LOE expression
    (45) boolexpr -> . expression GOE expression
    (46) boolexpr -> . expression EQUALS expression
    (47) boolexpr -> . expression DIFFERENT expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    boolexpr                       shift and go to state 60
    expression                     shift and go to state 57

state 39

    (38) loop -> UNTIL LPAREN . boolexpr RPAREN block END
    (40) boolexpr -> . boolexpr COR boolexpr
    (41) boolexpr -> . expression CAND expression
    (42) boolexpr -> . expression GT expression
    (43) boolexpr -> . expression LT expression
    (44) boolexpr -> . expression LOE expression
    (45) boolexpr -> . expression GOE expression
    (46) boolexpr -> . expression EQUALS expression
    (47) boolexpr -> . expression DIFFERENT expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    boolexpr                       shift and go to state 61
    expression                     shift and go to state 57

state 40

    (39) loop -> FOR LPAREN . NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END

    NAME            shift and go to state 62


state 41

    (20) statement -> NAME LPAREN . callarg RPAREN
    (21) statement -> NAME LPAREN . RPAREN
    (22) expression -> NAME LPAREN . callarg RPAREN
    (23) expression -> NAME LPAREN . RPAREN
    (26) callarg -> . expression COMMA callarg
    (27) callarg -> . expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    RPAREN          shift and go to state 64
    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    callarg                        shift and go to state 63
    expression                     shift and go to state 65

state 42

    (30) statement -> NAME AFFECT . expression
    (31) statement -> NAME AFFECT . address
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME
    (60) address -> . REF NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21
    REF             shift and go to state 68

    expression                     shift and go to state 66
    address                        shift and go to state 67

state 43

    (50) expression -> NAME SHORTINCR .

    SEMICOLON       reduce using rule 50 (expression -> NAME SHORTINCR .)
    PLUS            reduce using rule 50 (expression -> NAME SHORTINCR .)
    TIMES           reduce using rule 50 (expression -> NAME SHORTINCR .)
    MINUS           reduce using rule 50 (expression -> NAME SHORTINCR .)
    DIVIDE          reduce using rule 50 (expression -> NAME SHORTINCR .)
    OR              reduce using rule 50 (expression -> NAME SHORTINCR .)
    AND             reduce using rule 50 (expression -> NAME SHORTINCR .)
    RPAREN          reduce using rule 50 (expression -> NAME SHORTINCR .)
    CAND            reduce using rule 50 (expression -> NAME SHORTINCR .)
    GT              reduce using rule 50 (expression -> NAME SHORTINCR .)
    LT              reduce using rule 50 (expression -> NAME SHORTINCR .)
    LOE             reduce using rule 50 (expression -> NAME SHORTINCR .)
    GOE             reduce using rule 50 (expression -> NAME SHORTINCR .)
    EQUALS          reduce using rule 50 (expression -> NAME SHORTINCR .)
    DIFFERENT       reduce using rule 50 (expression -> NAME SHORTINCR .)
    COMMA           reduce using rule 50 (expression -> NAME SHORTINCR .)
    COR             reduce using rule 50 (expression -> NAME SHORTINCR .)


state 44

    (51) expression -> NAME SHORTADD . expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    expression                     shift and go to state 69

state 45

    (12) funcdef -> LET NAME . LPAREN declarg RPAREN block END
    (13) funcdef -> LET NAME . LPAREN RPAREN block END

    LPAREN          shift and go to state 70


state 46

    (14) classdef -> CLASS NAME . attributes END
    (15) attributes -> . NAME SEMICOLON
    (16) attributes -> . funcdef
    (17) attributes -> . NAME SEMICOLON attributes
    (18) attributes -> . funcdef attributes
    (12) funcdef -> . LET NAME LPAREN declarg RPAREN block END
    (13) funcdef -> . LET NAME LPAREN RPAREN block END

    NAME            shift and go to state 71
    LET             shift and go to state 16

    attributes                     shift and go to state 72
    funcdef                        shift and go to state 73

state 47

    (19) statement -> RETURN expression .
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

    SEMICOLON       reduce using rule 19 (statement -> RETURN expression .)
    RPAREN          reduce using rule 19 (statement -> RETURN expression .)
    PLUS            shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    DIVIDE          shift and go to state 32
    OR              shift and go to state 33
    AND             shift and go to state 34


state 48

    (32) statement -> VAR NAME .
    (33) statement -> VAR NAME . AFFECT expression
    (34) statement -> VAR NAME . AFFECT address

    SEMICOLON       reduce using rule 32 (statement -> VAR NAME .)
    RPAREN          reduce using rule 32 (statement -> VAR NAME .)
    AFFECT          shift and go to state 74


state 49

    (48) expression -> PRINT LPAREN . expression RPAREN
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    expression                     shift and go to state 75

state 50

    (49) expression -> expression PLUS expression .
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

    SEMICOLON       reduce using rule 49 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 49 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 49 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 49 (expression -> expression PLUS expression .)
    CAND            reduce using rule 49 (expression -> expression PLUS expression .)
    GT              reduce using rule 49 (expression -> expression PLUS expression .)
    LT              reduce using rule 49 (expression -> expression PLUS expression .)
    LOE             reduce using rule 49 (expression -> expression PLUS expression .)
    GOE             reduce using rule 49 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 49 (expression -> expression PLUS expression .)
    DIFFERENT       reduce using rule 49 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 49 (expression -> expression PLUS expression .)
    COR             reduce using rule 49 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 32
    OR              shift and go to state 33
    AND             shift and go to state 34

  ! TIMES           [ reduce using rule 49 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 49 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 49 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 31 ]


state 51

    (52) expression -> expression TIMES expression .
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

    SEMICOLON       reduce using rule 52 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 52 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 52 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 52 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 52 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 52 (expression -> expression TIMES expression .)
    CAND            reduce using rule 52 (expression -> expression TIMES expression .)
    GT              reduce using rule 52 (expression -> expression TIMES expression .)
    LT              reduce using rule 52 (expression -> expression TIMES expression .)
    LOE             reduce using rule 52 (expression -> expression TIMES expression .)
    GOE             reduce using rule 52 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 52 (expression -> expression TIMES expression .)
    DIFFERENT       reduce using rule 52 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 52 (expression -> expression TIMES expression .)
    COR             reduce using rule 52 (expression -> expression TIMES expression .)
    OR              shift and go to state 33
    AND             shift and go to state 34

  ! OR              [ reduce using rule 52 (expression -> expression TIMES expression .) ]
  ! AND             [ reduce using rule 52 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! TIMES           [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]


state 52

    (53) expression -> expression MINUS expression .
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

    SEMICOLON       reduce using rule 53 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 53 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 53 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 53 (expression -> expression MINUS expression .)
    CAND            reduce using rule 53 (expression -> expression MINUS expression .)
    GT              reduce using rule 53 (expression -> expression MINUS expression .)
    LT              reduce using rule 53 (expression -> expression MINUS expression .)
    LOE             reduce using rule 53 (expression -> expression MINUS expression .)
    GOE             reduce using rule 53 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 53 (expression -> expression MINUS expression .)
    DIFFERENT       reduce using rule 53 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 53 (expression -> expression MINUS expression .)
    COR             reduce using rule 53 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 32
    OR              shift and go to state 33
    AND             shift and go to state 34

  ! TIMES           [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 53 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! MINUS           [ shift and go to state 31 ]


state 53

    (54) expression -> expression DIVIDE expression .
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

    SEMICOLON       reduce using rule 54 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 54 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 54 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 54 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 54 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 54 (expression -> expression DIVIDE expression .)
    CAND            reduce using rule 54 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 54 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 54 (expression -> expression DIVIDE expression .)
    LOE             reduce using rule 54 (expression -> expression DIVIDE expression .)
    GOE             reduce using rule 54 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 54 (expression -> expression DIVIDE expression .)
    DIFFERENT       reduce using rule 54 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 54 (expression -> expression DIVIDE expression .)
    COR             reduce using rule 54 (expression -> expression DIVIDE expression .)
    OR              shift and go to state 33
    AND             shift and go to state 34

  ! OR              [ reduce using rule 54 (expression -> expression DIVIDE expression .) ]
  ! AND             [ reduce using rule 54 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! TIMES           [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]


state 54

    (55) expression -> expression OR expression .
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

    SEMICOLON       reduce using rule 55 (expression -> expression OR expression .)
    PLUS            reduce using rule 55 (expression -> expression OR expression .)
    TIMES           reduce using rule 55 (expression -> expression OR expression .)
    MINUS           reduce using rule 55 (expression -> expression OR expression .)
    DIVIDE          reduce using rule 55 (expression -> expression OR expression .)
    RPAREN          reduce using rule 55 (expression -> expression OR expression .)
    CAND            reduce using rule 55 (expression -> expression OR expression .)
    GT              reduce using rule 55 (expression -> expression OR expression .)
    LT              reduce using rule 55 (expression -> expression OR expression .)
    LOE             reduce using rule 55 (expression -> expression OR expression .)
    GOE             reduce using rule 55 (expression -> expression OR expression .)
    EQUALS          reduce using rule 55 (expression -> expression OR expression .)
    DIFFERENT       reduce using rule 55 (expression -> expression OR expression .)
    COMMA           reduce using rule 55 (expression -> expression OR expression .)
    COR             reduce using rule 55 (expression -> expression OR expression .)
    OR              shift and go to state 33
    AND             shift and go to state 34

  ! OR              [ reduce using rule 55 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 55 (expression -> expression OR expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! TIMES           [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]


state 55

    (56) expression -> expression AND expression .
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

    SEMICOLON       reduce using rule 56 (expression -> expression AND expression .)
    PLUS            reduce using rule 56 (expression -> expression AND expression .)
    TIMES           reduce using rule 56 (expression -> expression AND expression .)
    MINUS           reduce using rule 56 (expression -> expression AND expression .)
    DIVIDE          reduce using rule 56 (expression -> expression AND expression .)
    RPAREN          reduce using rule 56 (expression -> expression AND expression .)
    CAND            reduce using rule 56 (expression -> expression AND expression .)
    GT              reduce using rule 56 (expression -> expression AND expression .)
    LT              reduce using rule 56 (expression -> expression AND expression .)
    LOE             reduce using rule 56 (expression -> expression AND expression .)
    GOE             reduce using rule 56 (expression -> expression AND expression .)
    EQUALS          reduce using rule 56 (expression -> expression AND expression .)
    DIFFERENT       reduce using rule 56 (expression -> expression AND expression .)
    COMMA           reduce using rule 56 (expression -> expression AND expression .)
    COR             reduce using rule 56 (expression -> expression AND expression .)
    OR              shift and go to state 33
    AND             shift and go to state 34

  ! OR              [ reduce using rule 56 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 56 (expression -> expression AND expression .) ]
  ! PLUS            [ shift and go to state 29 ]
  ! TIMES           [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 31 ]
  ! DIVIDE          [ shift and go to state 32 ]


state 56

    (35) condition -> IF LPAREN boolexpr . RPAREN block END
    (36) condition -> IF LPAREN boolexpr . RPAREN block ELSE block END
    (40) boolexpr -> boolexpr . COR boolexpr

    RPAREN          shift and go to state 76
    COR             shift and go to state 77


state 57

    (41) boolexpr -> expression . CAND expression
    (42) boolexpr -> expression . GT expression
    (43) boolexpr -> expression . LT expression
    (44) boolexpr -> expression . LOE expression
    (45) boolexpr -> expression . GOE expression
    (46) boolexpr -> expression . EQUALS expression
    (47) boolexpr -> expression . DIFFERENT expression
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

    CAND            shift and go to state 78
    GT              shift and go to state 79
    LT              shift and go to state 80
    LOE             shift and go to state 81
    GOE             shift and go to state 82
    EQUALS          shift and go to state 83
    DIFFERENT       shift and go to state 84
    PLUS            shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    DIVIDE          shift and go to state 32
    OR              shift and go to state 33
    AND             shift and go to state 34


state 58

    (57) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    CAND            reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    LOE             reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    GOE             reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    DIFFERENT       reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 57 (expression -> LPAREN expression RPAREN .)
    COR             reduce using rule 57 (expression -> LPAREN expression RPAREN .)


state 59

    (22) expression -> NAME LPAREN . callarg RPAREN
    (23) expression -> NAME LPAREN . RPAREN
    (26) callarg -> . expression COMMA callarg
    (27) callarg -> . expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    RPAREN          shift and go to state 86
    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    callarg                        shift and go to state 85
    expression                     shift and go to state 65

state 60

    (37) loop -> WHILE LPAREN boolexpr . RPAREN block END
    (40) boolexpr -> boolexpr . COR boolexpr

    RPAREN          shift and go to state 87
    COR             shift and go to state 77


state 61

    (38) loop -> UNTIL LPAREN boolexpr . RPAREN block END
    (40) boolexpr -> boolexpr . COR boolexpr

    RPAREN          shift and go to state 88
    COR             shift and go to state 77


state 62

    (39) loop -> FOR LPAREN NAME . SEMICOLON boolexpr SEMICOLON statement RPAREN block END

    SEMICOLON       shift and go to state 89


state 63

    (20) statement -> NAME LPAREN callarg . RPAREN
    (22) expression -> NAME LPAREN callarg . RPAREN

    RPAREN          shift and go to state 90


state 64

    (21) statement -> NAME LPAREN RPAREN .
    (23) expression -> NAME LPAREN RPAREN .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 21 (statement -> NAME LPAREN RPAREN .)
    SEMICOLON       reduce using rule 21 (statement -> NAME LPAREN RPAREN .)
    PLUS            reduce using rule 23 (expression -> NAME LPAREN RPAREN .)
    TIMES           reduce using rule 23 (expression -> NAME LPAREN RPAREN .)
    MINUS           reduce using rule 23 (expression -> NAME LPAREN RPAREN .)
    DIVIDE          reduce using rule 23 (expression -> NAME LPAREN RPAREN .)
    OR              reduce using rule 23 (expression -> NAME LPAREN RPAREN .)
    AND             reduce using rule 23 (expression -> NAME LPAREN RPAREN .)

  ! SEMICOLON       [ reduce using rule 23 (expression -> NAME LPAREN RPAREN .) ]


state 65

    (26) callarg -> expression . COMMA callarg
    (27) callarg -> expression .
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

    COMMA           shift and go to state 91
    RPAREN          reduce using rule 27 (callarg -> expression .)
    PLUS            shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    DIVIDE          shift and go to state 32
    OR              shift and go to state 33
    AND             shift and go to state 34


state 66

    (30) statement -> NAME AFFECT expression .
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

    SEMICOLON       reduce using rule 30 (statement -> NAME AFFECT expression .)
    RPAREN          reduce using rule 30 (statement -> NAME AFFECT expression .)
    PLUS            shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    DIVIDE          shift and go to state 32
    OR              shift and go to state 33
    AND             shift and go to state 34


state 67

    (31) statement -> NAME AFFECT address .

    SEMICOLON       reduce using rule 31 (statement -> NAME AFFECT address .)
    RPAREN          reduce using rule 31 (statement -> NAME AFFECT address .)


state 68

    (60) address -> REF . NAME

    NAME            shift and go to state 92


state 69

    (51) expression -> NAME SHORTADD expression .
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    SEMICOLON       reduce using rule 51 (expression -> NAME SHORTADD expression .)
    RPAREN          reduce using rule 51 (expression -> NAME SHORTADD expression .)
    CAND            reduce using rule 51 (expression -> NAME SHORTADD expression .)
    GT              reduce using rule 51 (expression -> NAME SHORTADD expression .)
    LT              reduce using rule 51 (expression -> NAME SHORTADD expression .)
    LOE             reduce using rule 51 (expression -> NAME SHORTADD expression .)
    GOE             reduce using rule 51 (expression -> NAME SHORTADD expression .)
    EQUALS          reduce using rule 51 (expression -> NAME SHORTADD expression .)
    DIFFERENT       reduce using rule 51 (expression -> NAME SHORTADD expression .)
    COMMA           reduce using rule 51 (expression -> NAME SHORTADD expression .)
    COR             reduce using rule 51 (expression -> NAME SHORTADD expression .)
    PLUS            shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    DIVIDE          shift and go to state 32
    OR              shift and go to state 33
    AND             shift and go to state 34

  ! PLUS            [ reduce using rule 51 (expression -> NAME SHORTADD expression .) ]
  ! TIMES           [ reduce using rule 51 (expression -> NAME SHORTADD expression .) ]
  ! MINUS           [ reduce using rule 51 (expression -> NAME SHORTADD expression .) ]
  ! DIVIDE          [ reduce using rule 51 (expression -> NAME SHORTADD expression .) ]
  ! OR              [ reduce using rule 51 (expression -> NAME SHORTADD expression .) ]
  ! AND             [ reduce using rule 51 (expression -> NAME SHORTADD expression .) ]


state 70

    (12) funcdef -> LET NAME LPAREN . declarg RPAREN block END
    (13) funcdef -> LET NAME LPAREN . RPAREN block END
    (24) declarg -> . NAME COMMA declarg
    (25) declarg -> . NAME

    RPAREN          shift and go to state 95
    NAME            shift and go to state 93

    declarg                        shift and go to state 94

state 71

    (15) attributes -> NAME . SEMICOLON
    (17) attributes -> NAME . SEMICOLON attributes

    SEMICOLON       shift and go to state 96


state 72

    (14) classdef -> CLASS NAME attributes . END

    END             shift and go to state 97


state 73

    (16) attributes -> funcdef .
    (18) attributes -> funcdef . attributes
    (15) attributes -> . NAME SEMICOLON
    (16) attributes -> . funcdef
    (17) attributes -> . NAME SEMICOLON attributes
    (18) attributes -> . funcdef attributes
    (12) funcdef -> . LET NAME LPAREN declarg RPAREN block END
    (13) funcdef -> . LET NAME LPAREN RPAREN block END

    END             reduce using rule 16 (attributes -> funcdef .)
    NAME            shift and go to state 71
    LET             shift and go to state 16

    funcdef                        shift and go to state 73
    attributes                     shift and go to state 98

state 74

    (33) statement -> VAR NAME AFFECT . expression
    (34) statement -> VAR NAME AFFECT . address
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME
    (60) address -> . REF NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21
    REF             shift and go to state 68

    expression                     shift and go to state 99
    address                        shift and go to state 100

state 75

    (48) expression -> PRINT LPAREN expression . RPAREN
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

    RPAREN          shift and go to state 101
    PLUS            shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    DIVIDE          shift and go to state 32
    OR              shift and go to state 33
    AND             shift and go to state 34


state 76

    (35) condition -> IF LPAREN boolexpr RPAREN . block END
    (36) condition -> IF LPAREN boolexpr RPAREN . block ELSE block END
    (2) block -> . instruction block
    (3) block -> . condition block
    (4) block -> . loop block
    (5) block -> . funcdef block
    (6) block -> . classdef block
    (7) block -> . instruction
    (8) block -> . condition
    (9) block -> . loop
    (10) block -> . funcdef
    (11) block -> . classdef
    (28) instruction -> . statement SEMICOLON
    (29) instruction -> . expression SEMICOLON
    (35) condition -> . IF LPAREN boolexpr RPAREN block END
    (36) condition -> . IF LPAREN boolexpr RPAREN block ELSE block END
    (37) loop -> . WHILE LPAREN boolexpr RPAREN block END
    (38) loop -> . UNTIL LPAREN boolexpr RPAREN block END
    (39) loop -> . FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END
    (12) funcdef -> . LET NAME LPAREN declarg RPAREN block END
    (13) funcdef -> . LET NAME LPAREN RPAREN block END
    (14) classdef -> . CLASS NAME attributes END
    (19) statement -> . RETURN expression
    (20) statement -> . NAME LPAREN callarg RPAREN
    (21) statement -> . NAME LPAREN RPAREN
    (30) statement -> . NAME AFFECT expression
    (31) statement -> . NAME AFFECT address
    (32) statement -> . VAR NAME
    (33) statement -> . VAR NAME AFFECT expression
    (34) statement -> . VAR NAME AFFECT address
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    IF              shift and go to state 10
    WHILE           shift and go to state 12
    UNTIL           shift and go to state 13
    FOR             shift and go to state 14
    LET             shift and go to state 16
    CLASS           shift and go to state 17
    RETURN          shift and go to state 18
    NAME            shift and go to state 15
    VAR             shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    block                          shift and go to state 102
    instruction                    shift and go to state 3
    condition                      shift and go to state 4
    loop                           shift and go to state 5
    funcdef                        shift and go to state 6
    classdef                       shift and go to state 7
    statement                      shift and go to state 8
    expression                     shift and go to state 9

state 77

    (40) boolexpr -> boolexpr COR . boolexpr
    (40) boolexpr -> . boolexpr COR boolexpr
    (41) boolexpr -> . expression CAND expression
    (42) boolexpr -> . expression GT expression
    (43) boolexpr -> . expression LT expression
    (44) boolexpr -> . expression LOE expression
    (45) boolexpr -> . expression GOE expression
    (46) boolexpr -> . expression EQUALS expression
    (47) boolexpr -> . expression DIFFERENT expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    boolexpr                       shift and go to state 103
    expression                     shift and go to state 57

state 78

    (41) boolexpr -> expression CAND . expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    expression                     shift and go to state 104

state 79

    (42) boolexpr -> expression GT . expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    expression                     shift and go to state 105

state 80

    (43) boolexpr -> expression LT . expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    expression                     shift and go to state 106

state 81

    (44) boolexpr -> expression LOE . expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    expression                     shift and go to state 107

state 82

    (45) boolexpr -> expression GOE . expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    expression                     shift and go to state 108

state 83

    (46) boolexpr -> expression EQUALS . expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    expression                     shift and go to state 109

state 84

    (47) boolexpr -> expression DIFFERENT . expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    expression                     shift and go to state 110

state 85

    (22) expression -> NAME LPAREN callarg . RPAREN

    RPAREN          shift and go to state 111


state 86

    (23) expression -> NAME LPAREN RPAREN .

    RPAREN          reduce using rule 23 (expression -> NAME LPAREN RPAREN .)
    PLUS            reduce using rule 23 (expression -> NAME LPAREN RPAREN .)
    TIMES           reduce using rule 23 (expression -> NAME LPAREN RPAREN .)
    MINUS           reduce using rule 23 (expression -> NAME LPAREN RPAREN .)
    DIVIDE          reduce using rule 23 (expression -> NAME LPAREN RPAREN .)
    OR              reduce using rule 23 (expression -> NAME LPAREN RPAREN .)
    AND             reduce using rule 23 (expression -> NAME LPAREN RPAREN .)
    SEMICOLON       reduce using rule 23 (expression -> NAME LPAREN RPAREN .)
    CAND            reduce using rule 23 (expression -> NAME LPAREN RPAREN .)
    GT              reduce using rule 23 (expression -> NAME LPAREN RPAREN .)
    LT              reduce using rule 23 (expression -> NAME LPAREN RPAREN .)
    LOE             reduce using rule 23 (expression -> NAME LPAREN RPAREN .)
    GOE             reduce using rule 23 (expression -> NAME LPAREN RPAREN .)
    EQUALS          reduce using rule 23 (expression -> NAME LPAREN RPAREN .)
    DIFFERENT       reduce using rule 23 (expression -> NAME LPAREN RPAREN .)
    COMMA           reduce using rule 23 (expression -> NAME LPAREN RPAREN .)
    COR             reduce using rule 23 (expression -> NAME LPAREN RPAREN .)


state 87

    (37) loop -> WHILE LPAREN boolexpr RPAREN . block END
    (2) block -> . instruction block
    (3) block -> . condition block
    (4) block -> . loop block
    (5) block -> . funcdef block
    (6) block -> . classdef block
    (7) block -> . instruction
    (8) block -> . condition
    (9) block -> . loop
    (10) block -> . funcdef
    (11) block -> . classdef
    (28) instruction -> . statement SEMICOLON
    (29) instruction -> . expression SEMICOLON
    (35) condition -> . IF LPAREN boolexpr RPAREN block END
    (36) condition -> . IF LPAREN boolexpr RPAREN block ELSE block END
    (37) loop -> . WHILE LPAREN boolexpr RPAREN block END
    (38) loop -> . UNTIL LPAREN boolexpr RPAREN block END
    (39) loop -> . FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END
    (12) funcdef -> . LET NAME LPAREN declarg RPAREN block END
    (13) funcdef -> . LET NAME LPAREN RPAREN block END
    (14) classdef -> . CLASS NAME attributes END
    (19) statement -> . RETURN expression
    (20) statement -> . NAME LPAREN callarg RPAREN
    (21) statement -> . NAME LPAREN RPAREN
    (30) statement -> . NAME AFFECT expression
    (31) statement -> . NAME AFFECT address
    (32) statement -> . VAR NAME
    (33) statement -> . VAR NAME AFFECT expression
    (34) statement -> . VAR NAME AFFECT address
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    IF              shift and go to state 10
    WHILE           shift and go to state 12
    UNTIL           shift and go to state 13
    FOR             shift and go to state 14
    LET             shift and go to state 16
    CLASS           shift and go to state 17
    RETURN          shift and go to state 18
    NAME            shift and go to state 15
    VAR             shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    block                          shift and go to state 112
    instruction                    shift and go to state 3
    condition                      shift and go to state 4
    loop                           shift and go to state 5
    funcdef                        shift and go to state 6
    classdef                       shift and go to state 7
    statement                      shift and go to state 8
    expression                     shift and go to state 9

state 88

    (38) loop -> UNTIL LPAREN boolexpr RPAREN . block END
    (2) block -> . instruction block
    (3) block -> . condition block
    (4) block -> . loop block
    (5) block -> . funcdef block
    (6) block -> . classdef block
    (7) block -> . instruction
    (8) block -> . condition
    (9) block -> . loop
    (10) block -> . funcdef
    (11) block -> . classdef
    (28) instruction -> . statement SEMICOLON
    (29) instruction -> . expression SEMICOLON
    (35) condition -> . IF LPAREN boolexpr RPAREN block END
    (36) condition -> . IF LPAREN boolexpr RPAREN block ELSE block END
    (37) loop -> . WHILE LPAREN boolexpr RPAREN block END
    (38) loop -> . UNTIL LPAREN boolexpr RPAREN block END
    (39) loop -> . FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END
    (12) funcdef -> . LET NAME LPAREN declarg RPAREN block END
    (13) funcdef -> . LET NAME LPAREN RPAREN block END
    (14) classdef -> . CLASS NAME attributes END
    (19) statement -> . RETURN expression
    (20) statement -> . NAME LPAREN callarg RPAREN
    (21) statement -> . NAME LPAREN RPAREN
    (30) statement -> . NAME AFFECT expression
    (31) statement -> . NAME AFFECT address
    (32) statement -> . VAR NAME
    (33) statement -> . VAR NAME AFFECT expression
    (34) statement -> . VAR NAME AFFECT address
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    IF              shift and go to state 10
    WHILE           shift and go to state 12
    UNTIL           shift and go to state 13
    FOR             shift and go to state 14
    LET             shift and go to state 16
    CLASS           shift and go to state 17
    RETURN          shift and go to state 18
    NAME            shift and go to state 15
    VAR             shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    block                          shift and go to state 113
    instruction                    shift and go to state 3
    condition                      shift and go to state 4
    loop                           shift and go to state 5
    funcdef                        shift and go to state 6
    classdef                       shift and go to state 7
    statement                      shift and go to state 8
    expression                     shift and go to state 9

state 89

    (39) loop -> FOR LPAREN NAME SEMICOLON . boolexpr SEMICOLON statement RPAREN block END
    (40) boolexpr -> . boolexpr COR boolexpr
    (41) boolexpr -> . expression CAND expression
    (42) boolexpr -> . expression GT expression
    (43) boolexpr -> . expression LT expression
    (44) boolexpr -> . expression LOE expression
    (45) boolexpr -> . expression GOE expression
    (46) boolexpr -> . expression EQUALS expression
    (47) boolexpr -> . expression DIFFERENT expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    boolexpr                       shift and go to state 114
    expression                     shift and go to state 57

state 90

    (20) statement -> NAME LPAREN callarg RPAREN .
    (22) expression -> NAME LPAREN callarg RPAREN .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 20 (statement -> NAME LPAREN callarg RPAREN .)
    SEMICOLON       reduce using rule 20 (statement -> NAME LPAREN callarg RPAREN .)
    PLUS            reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)
    TIMES           reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)
    MINUS           reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)
    DIVIDE          reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)
    OR              reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)
    AND             reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)

  ! SEMICOLON       [ reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .) ]


state 91

    (26) callarg -> expression COMMA . callarg
    (26) callarg -> . expression COMMA callarg
    (27) callarg -> . expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    expression                     shift and go to state 65
    callarg                        shift and go to state 115

state 92

    (60) address -> REF NAME .

    SEMICOLON       reduce using rule 60 (address -> REF NAME .)
    RPAREN          reduce using rule 60 (address -> REF NAME .)


state 93

    (24) declarg -> NAME . COMMA declarg
    (25) declarg -> NAME .

    COMMA           shift and go to state 116
    RPAREN          reduce using rule 25 (declarg -> NAME .)


state 94

    (12) funcdef -> LET NAME LPAREN declarg . RPAREN block END

    RPAREN          shift and go to state 117


state 95

    (13) funcdef -> LET NAME LPAREN RPAREN . block END
    (2) block -> . instruction block
    (3) block -> . condition block
    (4) block -> . loop block
    (5) block -> . funcdef block
    (6) block -> . classdef block
    (7) block -> . instruction
    (8) block -> . condition
    (9) block -> . loop
    (10) block -> . funcdef
    (11) block -> . classdef
    (28) instruction -> . statement SEMICOLON
    (29) instruction -> . expression SEMICOLON
    (35) condition -> . IF LPAREN boolexpr RPAREN block END
    (36) condition -> . IF LPAREN boolexpr RPAREN block ELSE block END
    (37) loop -> . WHILE LPAREN boolexpr RPAREN block END
    (38) loop -> . UNTIL LPAREN boolexpr RPAREN block END
    (39) loop -> . FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END
    (12) funcdef -> . LET NAME LPAREN declarg RPAREN block END
    (13) funcdef -> . LET NAME LPAREN RPAREN block END
    (14) classdef -> . CLASS NAME attributes END
    (19) statement -> . RETURN expression
    (20) statement -> . NAME LPAREN callarg RPAREN
    (21) statement -> . NAME LPAREN RPAREN
    (30) statement -> . NAME AFFECT expression
    (31) statement -> . NAME AFFECT address
    (32) statement -> . VAR NAME
    (33) statement -> . VAR NAME AFFECT expression
    (34) statement -> . VAR NAME AFFECT address
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    IF              shift and go to state 10
    WHILE           shift and go to state 12
    UNTIL           shift and go to state 13
    FOR             shift and go to state 14
    LET             shift and go to state 16
    CLASS           shift and go to state 17
    RETURN          shift and go to state 18
    NAME            shift and go to state 15
    VAR             shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    block                          shift and go to state 118
    instruction                    shift and go to state 3
    condition                      shift and go to state 4
    loop                           shift and go to state 5
    funcdef                        shift and go to state 6
    classdef                       shift and go to state 7
    statement                      shift and go to state 8
    expression                     shift and go to state 9

state 96

    (15) attributes -> NAME SEMICOLON .
    (17) attributes -> NAME SEMICOLON . attributes
    (15) attributes -> . NAME SEMICOLON
    (16) attributes -> . funcdef
    (17) attributes -> . NAME SEMICOLON attributes
    (18) attributes -> . funcdef attributes
    (12) funcdef -> . LET NAME LPAREN declarg RPAREN block END
    (13) funcdef -> . LET NAME LPAREN RPAREN block END

    END             reduce using rule 15 (attributes -> NAME SEMICOLON .)
    NAME            shift and go to state 71
    LET             shift and go to state 16

    attributes                     shift and go to state 119
    funcdef                        shift and go to state 73

state 97

    (14) classdef -> CLASS NAME attributes END .

    IF              reduce using rule 14 (classdef -> CLASS NAME attributes END .)
    WHILE           reduce using rule 14 (classdef -> CLASS NAME attributes END .)
    UNTIL           reduce using rule 14 (classdef -> CLASS NAME attributes END .)
    FOR             reduce using rule 14 (classdef -> CLASS NAME attributes END .)
    LET             reduce using rule 14 (classdef -> CLASS NAME attributes END .)
    CLASS           reduce using rule 14 (classdef -> CLASS NAME attributes END .)
    RETURN          reduce using rule 14 (classdef -> CLASS NAME attributes END .)
    NAME            reduce using rule 14 (classdef -> CLASS NAME attributes END .)
    VAR             reduce using rule 14 (classdef -> CLASS NAME attributes END .)
    PRINT           reduce using rule 14 (classdef -> CLASS NAME attributes END .)
    LPAREN          reduce using rule 14 (classdef -> CLASS NAME attributes END .)
    NUMBER          reduce using rule 14 (classdef -> CLASS NAME attributes END .)
    $end            reduce using rule 14 (classdef -> CLASS NAME attributes END .)
    END             reduce using rule 14 (classdef -> CLASS NAME attributes END .)
    ELSE            reduce using rule 14 (classdef -> CLASS NAME attributes END .)


state 98

    (18) attributes -> funcdef attributes .

    END             reduce using rule 18 (attributes -> funcdef attributes .)


state 99

    (33) statement -> VAR NAME AFFECT expression .
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

    SEMICOLON       reduce using rule 33 (statement -> VAR NAME AFFECT expression .)
    RPAREN          reduce using rule 33 (statement -> VAR NAME AFFECT expression .)
    PLUS            shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    DIVIDE          shift and go to state 32
    OR              shift and go to state 33
    AND             shift and go to state 34


state 100

    (34) statement -> VAR NAME AFFECT address .

    SEMICOLON       reduce using rule 34 (statement -> VAR NAME AFFECT address .)
    RPAREN          reduce using rule 34 (statement -> VAR NAME AFFECT address .)


state 101

    (48) expression -> PRINT LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 48 (expression -> PRINT LPAREN expression RPAREN .)
    PLUS            reduce using rule 48 (expression -> PRINT LPAREN expression RPAREN .)
    TIMES           reduce using rule 48 (expression -> PRINT LPAREN expression RPAREN .)
    MINUS           reduce using rule 48 (expression -> PRINT LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 48 (expression -> PRINT LPAREN expression RPAREN .)
    OR              reduce using rule 48 (expression -> PRINT LPAREN expression RPAREN .)
    AND             reduce using rule 48 (expression -> PRINT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 48 (expression -> PRINT LPAREN expression RPAREN .)
    CAND            reduce using rule 48 (expression -> PRINT LPAREN expression RPAREN .)
    GT              reduce using rule 48 (expression -> PRINT LPAREN expression RPAREN .)
    LT              reduce using rule 48 (expression -> PRINT LPAREN expression RPAREN .)
    LOE             reduce using rule 48 (expression -> PRINT LPAREN expression RPAREN .)
    GOE             reduce using rule 48 (expression -> PRINT LPAREN expression RPAREN .)
    EQUALS          reduce using rule 48 (expression -> PRINT LPAREN expression RPAREN .)
    DIFFERENT       reduce using rule 48 (expression -> PRINT LPAREN expression RPAREN .)
    COMMA           reduce using rule 48 (expression -> PRINT LPAREN expression RPAREN .)
    COR             reduce using rule 48 (expression -> PRINT LPAREN expression RPAREN .)


state 102

    (35) condition -> IF LPAREN boolexpr RPAREN block . END
    (36) condition -> IF LPAREN boolexpr RPAREN block . ELSE block END

    END             shift and go to state 120
    ELSE            shift and go to state 121


state 103

    (40) boolexpr -> boolexpr COR boolexpr .
    (40) boolexpr -> boolexpr . COR boolexpr

  ! shift/reduce conflict for COR resolved as shift
    RPAREN          reduce using rule 40 (boolexpr -> boolexpr COR boolexpr .)
    SEMICOLON       reduce using rule 40 (boolexpr -> boolexpr COR boolexpr .)
    COR             shift and go to state 77

  ! COR             [ reduce using rule 40 (boolexpr -> boolexpr COR boolexpr .) ]


state 104

    (41) boolexpr -> expression CAND expression .
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

    RPAREN          reduce using rule 41 (boolexpr -> expression CAND expression .)
    COR             reduce using rule 41 (boolexpr -> expression CAND expression .)
    SEMICOLON       reduce using rule 41 (boolexpr -> expression CAND expression .)
    PLUS            shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    DIVIDE          shift and go to state 32
    OR              shift and go to state 33
    AND             shift and go to state 34


state 105

    (42) boolexpr -> expression GT expression .
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

    RPAREN          reduce using rule 42 (boolexpr -> expression GT expression .)
    COR             reduce using rule 42 (boolexpr -> expression GT expression .)
    SEMICOLON       reduce using rule 42 (boolexpr -> expression GT expression .)
    PLUS            shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    DIVIDE          shift and go to state 32
    OR              shift and go to state 33
    AND             shift and go to state 34


state 106

    (43) boolexpr -> expression LT expression .
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

    RPAREN          reduce using rule 43 (boolexpr -> expression LT expression .)
    COR             reduce using rule 43 (boolexpr -> expression LT expression .)
    SEMICOLON       reduce using rule 43 (boolexpr -> expression LT expression .)
    PLUS            shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    DIVIDE          shift and go to state 32
    OR              shift and go to state 33
    AND             shift and go to state 34


state 107

    (44) boolexpr -> expression LOE expression .
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

    RPAREN          reduce using rule 44 (boolexpr -> expression LOE expression .)
    COR             reduce using rule 44 (boolexpr -> expression LOE expression .)
    SEMICOLON       reduce using rule 44 (boolexpr -> expression LOE expression .)
    PLUS            shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    DIVIDE          shift and go to state 32
    OR              shift and go to state 33
    AND             shift and go to state 34


state 108

    (45) boolexpr -> expression GOE expression .
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

    RPAREN          reduce using rule 45 (boolexpr -> expression GOE expression .)
    COR             reduce using rule 45 (boolexpr -> expression GOE expression .)
    SEMICOLON       reduce using rule 45 (boolexpr -> expression GOE expression .)
    PLUS            shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    DIVIDE          shift and go to state 32
    OR              shift and go to state 33
    AND             shift and go to state 34


state 109

    (46) boolexpr -> expression EQUALS expression .
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

    RPAREN          reduce using rule 46 (boolexpr -> expression EQUALS expression .)
    COR             reduce using rule 46 (boolexpr -> expression EQUALS expression .)
    SEMICOLON       reduce using rule 46 (boolexpr -> expression EQUALS expression .)
    PLUS            shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    DIVIDE          shift and go to state 32
    OR              shift and go to state 33
    AND             shift and go to state 34


state 110

    (47) boolexpr -> expression DIFFERENT expression .
    (49) expression -> expression . PLUS expression
    (52) expression -> expression . TIMES expression
    (53) expression -> expression . MINUS expression
    (54) expression -> expression . DIVIDE expression
    (55) expression -> expression . OR expression
    (56) expression -> expression . AND expression

    RPAREN          reduce using rule 47 (boolexpr -> expression DIFFERENT expression .)
    COR             reduce using rule 47 (boolexpr -> expression DIFFERENT expression .)
    SEMICOLON       reduce using rule 47 (boolexpr -> expression DIFFERENT expression .)
    PLUS            shift and go to state 29
    TIMES           shift and go to state 30
    MINUS           shift and go to state 31
    DIVIDE          shift and go to state 32
    OR              shift and go to state 33
    AND             shift and go to state 34


state 111

    (22) expression -> NAME LPAREN callarg RPAREN .

    RPAREN          reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)
    PLUS            reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)
    TIMES           reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)
    MINUS           reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)
    DIVIDE          reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)
    OR              reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)
    AND             reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)
    SEMICOLON       reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)
    CAND            reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)
    GT              reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)
    LT              reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)
    LOE             reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)
    GOE             reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)
    EQUALS          reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)
    DIFFERENT       reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)
    COMMA           reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)
    COR             reduce using rule 22 (expression -> NAME LPAREN callarg RPAREN .)


state 112

    (37) loop -> WHILE LPAREN boolexpr RPAREN block . END

    END             shift and go to state 122


state 113

    (38) loop -> UNTIL LPAREN boolexpr RPAREN block . END

    END             shift and go to state 123


state 114

    (39) loop -> FOR LPAREN NAME SEMICOLON boolexpr . SEMICOLON statement RPAREN block END
    (40) boolexpr -> boolexpr . COR boolexpr

    SEMICOLON       shift and go to state 124
    COR             shift and go to state 77


state 115

    (26) callarg -> expression COMMA callarg .

    RPAREN          reduce using rule 26 (callarg -> expression COMMA callarg .)


state 116

    (24) declarg -> NAME COMMA . declarg
    (24) declarg -> . NAME COMMA declarg
    (25) declarg -> . NAME

    NAME            shift and go to state 93

    declarg                        shift and go to state 125

state 117

    (12) funcdef -> LET NAME LPAREN declarg RPAREN . block END
    (2) block -> . instruction block
    (3) block -> . condition block
    (4) block -> . loop block
    (5) block -> . funcdef block
    (6) block -> . classdef block
    (7) block -> . instruction
    (8) block -> . condition
    (9) block -> . loop
    (10) block -> . funcdef
    (11) block -> . classdef
    (28) instruction -> . statement SEMICOLON
    (29) instruction -> . expression SEMICOLON
    (35) condition -> . IF LPAREN boolexpr RPAREN block END
    (36) condition -> . IF LPAREN boolexpr RPAREN block ELSE block END
    (37) loop -> . WHILE LPAREN boolexpr RPAREN block END
    (38) loop -> . UNTIL LPAREN boolexpr RPAREN block END
    (39) loop -> . FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END
    (12) funcdef -> . LET NAME LPAREN declarg RPAREN block END
    (13) funcdef -> . LET NAME LPAREN RPAREN block END
    (14) classdef -> . CLASS NAME attributes END
    (19) statement -> . RETURN expression
    (20) statement -> . NAME LPAREN callarg RPAREN
    (21) statement -> . NAME LPAREN RPAREN
    (30) statement -> . NAME AFFECT expression
    (31) statement -> . NAME AFFECT address
    (32) statement -> . VAR NAME
    (33) statement -> . VAR NAME AFFECT expression
    (34) statement -> . VAR NAME AFFECT address
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    IF              shift and go to state 10
    WHILE           shift and go to state 12
    UNTIL           shift and go to state 13
    FOR             shift and go to state 14
    LET             shift and go to state 16
    CLASS           shift and go to state 17
    RETURN          shift and go to state 18
    NAME            shift and go to state 15
    VAR             shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    block                          shift and go to state 126
    instruction                    shift and go to state 3
    condition                      shift and go to state 4
    loop                           shift and go to state 5
    funcdef                        shift and go to state 6
    classdef                       shift and go to state 7
    statement                      shift and go to state 8
    expression                     shift and go to state 9

state 118

    (13) funcdef -> LET NAME LPAREN RPAREN block . END

    END             shift and go to state 127


state 119

    (17) attributes -> NAME SEMICOLON attributes .

    END             reduce using rule 17 (attributes -> NAME SEMICOLON attributes .)


state 120

    (35) condition -> IF LPAREN boolexpr RPAREN block END .

    IF              reduce using rule 35 (condition -> IF LPAREN boolexpr RPAREN block END .)
    WHILE           reduce using rule 35 (condition -> IF LPAREN boolexpr RPAREN block END .)
    UNTIL           reduce using rule 35 (condition -> IF LPAREN boolexpr RPAREN block END .)
    FOR             reduce using rule 35 (condition -> IF LPAREN boolexpr RPAREN block END .)
    LET             reduce using rule 35 (condition -> IF LPAREN boolexpr RPAREN block END .)
    CLASS           reduce using rule 35 (condition -> IF LPAREN boolexpr RPAREN block END .)
    RETURN          reduce using rule 35 (condition -> IF LPAREN boolexpr RPAREN block END .)
    NAME            reduce using rule 35 (condition -> IF LPAREN boolexpr RPAREN block END .)
    VAR             reduce using rule 35 (condition -> IF LPAREN boolexpr RPAREN block END .)
    PRINT           reduce using rule 35 (condition -> IF LPAREN boolexpr RPAREN block END .)
    LPAREN          reduce using rule 35 (condition -> IF LPAREN boolexpr RPAREN block END .)
    NUMBER          reduce using rule 35 (condition -> IF LPAREN boolexpr RPAREN block END .)
    $end            reduce using rule 35 (condition -> IF LPAREN boolexpr RPAREN block END .)
    END             reduce using rule 35 (condition -> IF LPAREN boolexpr RPAREN block END .)
    ELSE            reduce using rule 35 (condition -> IF LPAREN boolexpr RPAREN block END .)


state 121

    (36) condition -> IF LPAREN boolexpr RPAREN block ELSE . block END
    (2) block -> . instruction block
    (3) block -> . condition block
    (4) block -> . loop block
    (5) block -> . funcdef block
    (6) block -> . classdef block
    (7) block -> . instruction
    (8) block -> . condition
    (9) block -> . loop
    (10) block -> . funcdef
    (11) block -> . classdef
    (28) instruction -> . statement SEMICOLON
    (29) instruction -> . expression SEMICOLON
    (35) condition -> . IF LPAREN boolexpr RPAREN block END
    (36) condition -> . IF LPAREN boolexpr RPAREN block ELSE block END
    (37) loop -> . WHILE LPAREN boolexpr RPAREN block END
    (38) loop -> . UNTIL LPAREN boolexpr RPAREN block END
    (39) loop -> . FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END
    (12) funcdef -> . LET NAME LPAREN declarg RPAREN block END
    (13) funcdef -> . LET NAME LPAREN RPAREN block END
    (14) classdef -> . CLASS NAME attributes END
    (19) statement -> . RETURN expression
    (20) statement -> . NAME LPAREN callarg RPAREN
    (21) statement -> . NAME LPAREN RPAREN
    (30) statement -> . NAME AFFECT expression
    (31) statement -> . NAME AFFECT address
    (32) statement -> . VAR NAME
    (33) statement -> . VAR NAME AFFECT expression
    (34) statement -> . VAR NAME AFFECT address
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    IF              shift and go to state 10
    WHILE           shift and go to state 12
    UNTIL           shift and go to state 13
    FOR             shift and go to state 14
    LET             shift and go to state 16
    CLASS           shift and go to state 17
    RETURN          shift and go to state 18
    NAME            shift and go to state 15
    VAR             shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    block                          shift and go to state 128
    instruction                    shift and go to state 3
    condition                      shift and go to state 4
    loop                           shift and go to state 5
    funcdef                        shift and go to state 6
    classdef                       shift and go to state 7
    statement                      shift and go to state 8
    expression                     shift and go to state 9

state 122

    (37) loop -> WHILE LPAREN boolexpr RPAREN block END .

    IF              reduce using rule 37 (loop -> WHILE LPAREN boolexpr RPAREN block END .)
    WHILE           reduce using rule 37 (loop -> WHILE LPAREN boolexpr RPAREN block END .)
    UNTIL           reduce using rule 37 (loop -> WHILE LPAREN boolexpr RPAREN block END .)
    FOR             reduce using rule 37 (loop -> WHILE LPAREN boolexpr RPAREN block END .)
    LET             reduce using rule 37 (loop -> WHILE LPAREN boolexpr RPAREN block END .)
    CLASS           reduce using rule 37 (loop -> WHILE LPAREN boolexpr RPAREN block END .)
    RETURN          reduce using rule 37 (loop -> WHILE LPAREN boolexpr RPAREN block END .)
    NAME            reduce using rule 37 (loop -> WHILE LPAREN boolexpr RPAREN block END .)
    VAR             reduce using rule 37 (loop -> WHILE LPAREN boolexpr RPAREN block END .)
    PRINT           reduce using rule 37 (loop -> WHILE LPAREN boolexpr RPAREN block END .)
    LPAREN          reduce using rule 37 (loop -> WHILE LPAREN boolexpr RPAREN block END .)
    NUMBER          reduce using rule 37 (loop -> WHILE LPAREN boolexpr RPAREN block END .)
    $end            reduce using rule 37 (loop -> WHILE LPAREN boolexpr RPAREN block END .)
    END             reduce using rule 37 (loop -> WHILE LPAREN boolexpr RPAREN block END .)
    ELSE            reduce using rule 37 (loop -> WHILE LPAREN boolexpr RPAREN block END .)


state 123

    (38) loop -> UNTIL LPAREN boolexpr RPAREN block END .

    IF              reduce using rule 38 (loop -> UNTIL LPAREN boolexpr RPAREN block END .)
    WHILE           reduce using rule 38 (loop -> UNTIL LPAREN boolexpr RPAREN block END .)
    UNTIL           reduce using rule 38 (loop -> UNTIL LPAREN boolexpr RPAREN block END .)
    FOR             reduce using rule 38 (loop -> UNTIL LPAREN boolexpr RPAREN block END .)
    LET             reduce using rule 38 (loop -> UNTIL LPAREN boolexpr RPAREN block END .)
    CLASS           reduce using rule 38 (loop -> UNTIL LPAREN boolexpr RPAREN block END .)
    RETURN          reduce using rule 38 (loop -> UNTIL LPAREN boolexpr RPAREN block END .)
    NAME            reduce using rule 38 (loop -> UNTIL LPAREN boolexpr RPAREN block END .)
    VAR             reduce using rule 38 (loop -> UNTIL LPAREN boolexpr RPAREN block END .)
    PRINT           reduce using rule 38 (loop -> UNTIL LPAREN boolexpr RPAREN block END .)
    LPAREN          reduce using rule 38 (loop -> UNTIL LPAREN boolexpr RPAREN block END .)
    NUMBER          reduce using rule 38 (loop -> UNTIL LPAREN boolexpr RPAREN block END .)
    $end            reduce using rule 38 (loop -> UNTIL LPAREN boolexpr RPAREN block END .)
    END             reduce using rule 38 (loop -> UNTIL LPAREN boolexpr RPAREN block END .)
    ELSE            reduce using rule 38 (loop -> UNTIL LPAREN boolexpr RPAREN block END .)


state 124

    (39) loop -> FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON . statement RPAREN block END
    (19) statement -> . RETURN expression
    (20) statement -> . NAME LPAREN callarg RPAREN
    (21) statement -> . NAME LPAREN RPAREN
    (30) statement -> . NAME AFFECT expression
    (31) statement -> . NAME AFFECT address
    (32) statement -> . VAR NAME
    (33) statement -> . VAR NAME AFFECT expression
    (34) statement -> . VAR NAME AFFECT address

    RETURN          shift and go to state 18
    NAME            shift and go to state 129
    VAR             shift and go to state 19

    statement                      shift and go to state 130

state 125

    (24) declarg -> NAME COMMA declarg .

    RPAREN          reduce using rule 24 (declarg -> NAME COMMA declarg .)


state 126

    (12) funcdef -> LET NAME LPAREN declarg RPAREN block . END

    END             shift and go to state 131


state 127

    (13) funcdef -> LET NAME LPAREN RPAREN block END .

    IF              reduce using rule 13 (funcdef -> LET NAME LPAREN RPAREN block END .)
    WHILE           reduce using rule 13 (funcdef -> LET NAME LPAREN RPAREN block END .)
    UNTIL           reduce using rule 13 (funcdef -> LET NAME LPAREN RPAREN block END .)
    FOR             reduce using rule 13 (funcdef -> LET NAME LPAREN RPAREN block END .)
    LET             reduce using rule 13 (funcdef -> LET NAME LPAREN RPAREN block END .)
    CLASS           reduce using rule 13 (funcdef -> LET NAME LPAREN RPAREN block END .)
    RETURN          reduce using rule 13 (funcdef -> LET NAME LPAREN RPAREN block END .)
    NAME            reduce using rule 13 (funcdef -> LET NAME LPAREN RPAREN block END .)
    VAR             reduce using rule 13 (funcdef -> LET NAME LPAREN RPAREN block END .)
    PRINT           reduce using rule 13 (funcdef -> LET NAME LPAREN RPAREN block END .)
    LPAREN          reduce using rule 13 (funcdef -> LET NAME LPAREN RPAREN block END .)
    NUMBER          reduce using rule 13 (funcdef -> LET NAME LPAREN RPAREN block END .)
    $end            reduce using rule 13 (funcdef -> LET NAME LPAREN RPAREN block END .)
    END             reduce using rule 13 (funcdef -> LET NAME LPAREN RPAREN block END .)
    ELSE            reduce using rule 13 (funcdef -> LET NAME LPAREN RPAREN block END .)


state 128

    (36) condition -> IF LPAREN boolexpr RPAREN block ELSE block . END

    END             shift and go to state 132


state 129

    (20) statement -> NAME . LPAREN callarg RPAREN
    (21) statement -> NAME . LPAREN RPAREN
    (30) statement -> NAME . AFFECT expression
    (31) statement -> NAME . AFFECT address

    LPAREN          shift and go to state 133
    AFFECT          shift and go to state 42


state 130

    (39) loop -> FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement . RPAREN block END

    RPAREN          shift and go to state 134


state 131

    (12) funcdef -> LET NAME LPAREN declarg RPAREN block END .

    IF              reduce using rule 12 (funcdef -> LET NAME LPAREN declarg RPAREN block END .)
    WHILE           reduce using rule 12 (funcdef -> LET NAME LPAREN declarg RPAREN block END .)
    UNTIL           reduce using rule 12 (funcdef -> LET NAME LPAREN declarg RPAREN block END .)
    FOR             reduce using rule 12 (funcdef -> LET NAME LPAREN declarg RPAREN block END .)
    LET             reduce using rule 12 (funcdef -> LET NAME LPAREN declarg RPAREN block END .)
    CLASS           reduce using rule 12 (funcdef -> LET NAME LPAREN declarg RPAREN block END .)
    RETURN          reduce using rule 12 (funcdef -> LET NAME LPAREN declarg RPAREN block END .)
    NAME            reduce using rule 12 (funcdef -> LET NAME LPAREN declarg RPAREN block END .)
    VAR             reduce using rule 12 (funcdef -> LET NAME LPAREN declarg RPAREN block END .)
    PRINT           reduce using rule 12 (funcdef -> LET NAME LPAREN declarg RPAREN block END .)
    LPAREN          reduce using rule 12 (funcdef -> LET NAME LPAREN declarg RPAREN block END .)
    NUMBER          reduce using rule 12 (funcdef -> LET NAME LPAREN declarg RPAREN block END .)
    $end            reduce using rule 12 (funcdef -> LET NAME LPAREN declarg RPAREN block END .)
    END             reduce using rule 12 (funcdef -> LET NAME LPAREN declarg RPAREN block END .)
    ELSE            reduce using rule 12 (funcdef -> LET NAME LPAREN declarg RPAREN block END .)


state 132

    (36) condition -> IF LPAREN boolexpr RPAREN block ELSE block END .

    IF              reduce using rule 36 (condition -> IF LPAREN boolexpr RPAREN block ELSE block END .)
    WHILE           reduce using rule 36 (condition -> IF LPAREN boolexpr RPAREN block ELSE block END .)
    UNTIL           reduce using rule 36 (condition -> IF LPAREN boolexpr RPAREN block ELSE block END .)
    FOR             reduce using rule 36 (condition -> IF LPAREN boolexpr RPAREN block ELSE block END .)
    LET             reduce using rule 36 (condition -> IF LPAREN boolexpr RPAREN block ELSE block END .)
    CLASS           reduce using rule 36 (condition -> IF LPAREN boolexpr RPAREN block ELSE block END .)
    RETURN          reduce using rule 36 (condition -> IF LPAREN boolexpr RPAREN block ELSE block END .)
    NAME            reduce using rule 36 (condition -> IF LPAREN boolexpr RPAREN block ELSE block END .)
    VAR             reduce using rule 36 (condition -> IF LPAREN boolexpr RPAREN block ELSE block END .)
    PRINT           reduce using rule 36 (condition -> IF LPAREN boolexpr RPAREN block ELSE block END .)
    LPAREN          reduce using rule 36 (condition -> IF LPAREN boolexpr RPAREN block ELSE block END .)
    NUMBER          reduce using rule 36 (condition -> IF LPAREN boolexpr RPAREN block ELSE block END .)
    $end            reduce using rule 36 (condition -> IF LPAREN boolexpr RPAREN block ELSE block END .)
    END             reduce using rule 36 (condition -> IF LPAREN boolexpr RPAREN block ELSE block END .)
    ELSE            reduce using rule 36 (condition -> IF LPAREN boolexpr RPAREN block ELSE block END .)


state 133

    (20) statement -> NAME LPAREN . callarg RPAREN
    (21) statement -> NAME LPAREN . RPAREN
    (26) callarg -> . expression COMMA callarg
    (27) callarg -> . expression
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    RPAREN          shift and go to state 136
    NAME            shift and go to state 37
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    callarg                        shift and go to state 135
    expression                     shift and go to state 65

state 134

    (39) loop -> FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN . block END
    (2) block -> . instruction block
    (3) block -> . condition block
    (4) block -> . loop block
    (5) block -> . funcdef block
    (6) block -> . classdef block
    (7) block -> . instruction
    (8) block -> . condition
    (9) block -> . loop
    (10) block -> . funcdef
    (11) block -> . classdef
    (28) instruction -> . statement SEMICOLON
    (29) instruction -> . expression SEMICOLON
    (35) condition -> . IF LPAREN boolexpr RPAREN block END
    (36) condition -> . IF LPAREN boolexpr RPAREN block ELSE block END
    (37) loop -> . WHILE LPAREN boolexpr RPAREN block END
    (38) loop -> . UNTIL LPAREN boolexpr RPAREN block END
    (39) loop -> . FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END
    (12) funcdef -> . LET NAME LPAREN declarg RPAREN block END
    (13) funcdef -> . LET NAME LPAREN RPAREN block END
    (14) classdef -> . CLASS NAME attributes END
    (19) statement -> . RETURN expression
    (20) statement -> . NAME LPAREN callarg RPAREN
    (21) statement -> . NAME LPAREN RPAREN
    (30) statement -> . NAME AFFECT expression
    (31) statement -> . NAME AFFECT address
    (32) statement -> . VAR NAME
    (33) statement -> . VAR NAME AFFECT expression
    (34) statement -> . VAR NAME AFFECT address
    (22) expression -> . NAME LPAREN callarg RPAREN
    (23) expression -> . NAME LPAREN RPAREN
    (48) expression -> . PRINT LPAREN expression RPAREN
    (49) expression -> . expression PLUS expression
    (50) expression -> . NAME SHORTINCR
    (51) expression -> . NAME SHORTADD expression
    (52) expression -> . expression TIMES expression
    (53) expression -> . expression MINUS expression
    (54) expression -> . expression DIVIDE expression
    (55) expression -> . expression OR expression
    (56) expression -> . expression AND expression
    (57) expression -> . LPAREN expression RPAREN
    (58) expression -> . NUMBER
    (59) expression -> . NAME

    IF              shift and go to state 10
    WHILE           shift and go to state 12
    UNTIL           shift and go to state 13
    FOR             shift and go to state 14
    LET             shift and go to state 16
    CLASS           shift and go to state 17
    RETURN          shift and go to state 18
    NAME            shift and go to state 15
    VAR             shift and go to state 19
    PRINT           shift and go to state 20
    LPAREN          shift and go to state 11
    NUMBER          shift and go to state 21

    statement                      shift and go to state 8
    block                          shift and go to state 137
    instruction                    shift and go to state 3
    condition                      shift and go to state 4
    loop                           shift and go to state 5
    funcdef                        shift and go to state 6
    classdef                       shift and go to state 7
    expression                     shift and go to state 9

state 135

    (20) statement -> NAME LPAREN callarg . RPAREN

    RPAREN          shift and go to state 138


state 136

    (21) statement -> NAME LPAREN RPAREN .

    RPAREN          reduce using rule 21 (statement -> NAME LPAREN RPAREN .)


state 137

    (39) loop -> FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block . END

    END             shift and go to state 139


state 138

    (20) statement -> NAME LPAREN callarg RPAREN .

    RPAREN          reduce using rule 20 (statement -> NAME LPAREN callarg RPAREN .)


state 139

    (39) loop -> FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END .

    IF              reduce using rule 39 (loop -> FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END .)
    WHILE           reduce using rule 39 (loop -> FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END .)
    UNTIL           reduce using rule 39 (loop -> FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END .)
    FOR             reduce using rule 39 (loop -> FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END .)
    LET             reduce using rule 39 (loop -> FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END .)
    CLASS           reduce using rule 39 (loop -> FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END .)
    RETURN          reduce using rule 39 (loop -> FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END .)
    NAME            reduce using rule 39 (loop -> FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END .)
    VAR             reduce using rule 39 (loop -> FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END .)
    PRINT           reduce using rule 39 (loop -> FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END .)
    LPAREN          reduce using rule 39 (loop -> FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END .)
    NUMBER          reduce using rule 39 (loop -> FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END .)
    $end            reduce using rule 39 (loop -> FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END .)
    END             reduce using rule 39 (loop -> FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END .)
    ELSE            reduce using rule 39 (loop -> FOR LPAREN NAME SEMICOLON boolexpr SEMICOLON statement RPAREN block END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 69 resolved as shift
WARNING: shift/reduce conflict for OR in state 69 resolved as shift
WARNING: shift/reduce conflict for AND in state 69 resolved as shift
WARNING: shift/reduce conflict for COR in state 103 resolved as shift
WARNING: reduce/reduce conflict in state 64 resolved using rule (statement -> NAME LPAREN RPAREN)
WARNING: rejected rule (expression -> NAME LPAREN RPAREN) in state 64
WARNING: reduce/reduce conflict in state 90 resolved using rule (statement -> NAME LPAREN callarg RPAREN)
WARNING: rejected rule (expression -> NAME LPAREN callarg RPAREN) in state 90
